/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.2.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "80";
    object      Theta;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 2 -2 0 0 0 0];

internalField   nonuniform List<scalar> 
80
(
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
2.26936
1.76452
1.63156
1.4505
)
;

boundaryField
{
    up
    {
        type            myTemperature;
        value           nonuniform List<scalar> 
20
(
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
1.36269
)
;
    }
    hole
    {
        type            myTemperature;
        value           nonuniform List<scalar> 
20
(
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
2.54922
)
;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
